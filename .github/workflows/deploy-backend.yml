name: Deploy Backend to Cloudflare

on:
  push:
    branches: [ main ]
    paths: 
      - 'api/**'
      - '.github/workflows/deploy-backend.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'api/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.17.1
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
        
    - name: Install dependencies
      run: |
        cd api
        pnpm install --frozen-lockfile
      env:
        PATH: ${{ env.PATH }}:${{ env.HOME }}/.local/share/pnpm
        
    - name: Run tests
      run: |
        cd api
        pnpm run test
      env:
        PATH: ${{ env.PATH }}:${{ env.HOME }}/.local/share/pnpm
        
    - name: Run type check
      run: |
        cd api
        pnpm run type-check
      env:
        PATH: ${{ env.PATH }}:${{ env.HOME }}/.local/share/pnpm
        
    - name: Run lint
      run: |
        cd api
        pnpm run lint
      env:
        PATH: ${{ env.PATH }}:${{ env.HOME }}/.local/share/pnpm
        
    - name: Debug Cloudflare deployment
      run: |
        cd api
        echo "Current directory:"
        pwd
        echo "Wrangler config files:"
        ls -la wrangler.toml
        echo "Source files:"
        ls -la src/
        echo "Wrangler version:"
        npx wrangler --version
        echo "Checking Cloudflare credentials..."
        if [ -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ]; then
          echo "CLOUDFLARE_API_TOKEN is empty"
        else
          echo "CLOUDFLARE_API_TOKEN is set"
        fi
        if [ -z "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ]; then
          echo "CLOUDFLARE_ACCOUNT_ID is empty"
        else
          echo "CLOUDFLARE_ACCOUNT_ID is set"
        fi
      env:
        PATH: ${{ env.PATH }}:${{ env.HOME }}/.local/share/pnpm
        
    - name: Deploy to Cloudflare
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: deploy
        workingDirectory: api
