name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.17.1
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
        
    - name: Install dependencies
      run: |
        cd web
        pnpm install --frozen-lockfile
        
    - name: Run TypeScript type checking
      run: |
        cd web
        pnpm run type-check
        
    - name: Run ESLint
      run: |
        cd web
        pnpm run lint
        
    - name: Run unit tests
      run: |
        cd web
        pnpm run test

  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.17.1
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
        
    - name: Install dependencies
      run: |
        cd api
        echo "Installing dependencies..."
        pnpm install --frozen-lockfile
        echo "Dependencies installed successfully"
        echo "Checking pnpm version:"
        pnpm --version
      env:
        PATH: ${{ env.PATH }}:${{ env.HOME }}/.local/share/pnpm
        
    - name: Run TypeScript type checking
      run: |
        cd api
        echo "Running type check..."
        pnpm run type-check
        echo "Type check completed"
      env:
        PATH: ${{ env.PATH }}:${{ env.HOME }}/.local/share/pnpm
        
    - name: Run ESLint
      run: |
        cd api
        echo "Running lint..."
        pnpm run lint
        echo "Lint completed"
      env:
        PATH: ${{ env.PATH }}:${{ env.HOME }}/.local/share/pnpm
        
    - name: Run unit tests
      run: |
        cd api
        echo "Running tests..."
        pnpm run test
        echo "Tests completed"
      env:
        PATH: ${{ env.PATH }}:${{ env.HOME }}/.local/share/pnpm

