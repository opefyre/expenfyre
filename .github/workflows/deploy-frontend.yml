name: Deploy Frontend to Firebase

on:
  push:
    branches: [ main ]
    paths: [ 'web/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'web/**' ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.17.1
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
        
    - name: Install dependencies
      run: |
        cd web
        pnpm install --frozen-lockfile
        
    - name: Run tests
      run: |
        cd web
        pnpm run test
        
    - name: Run type check
      run: |
        cd web
        pnpm run type-check
        
    - name: Run lint
      run: |
        cd web
        pnpm run lint
        
    - name: Build
      run: |
        cd web
        pnpm run build
        
    - name: Setup Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Deploy to Firebase
      run: |
        cd web
        echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > /tmp/firebase-service-account.json
        export GOOGLE_APPLICATION_CREDENTIALS="/tmp/firebase-service-account.json"
        echo "Firebase CLI version:"
        firebase --version
        echo "Current directory:"
        pwd
        echo "Firebase config files:"
        ls -la firebase.json .firebaserc
        echo "Deploying to Firebase..."
        firebase deploy --only hosting:expenfyre --project opefyre-expense-tracker --debug
        rm /tmp/firebase-service-account.json
